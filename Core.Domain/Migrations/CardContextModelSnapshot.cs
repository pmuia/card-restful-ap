// <auto-generated />
using System;
using Core.Domain.Infrastructure.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Core.Domain.Migrations
{
    [DbContext(typeof(CardContext))]
    partial class CardContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Core.Domain.Entities.CardModule.Aggregates.Card", b =>
                {
                    b.Property<long>("CardId")
                        .HasColumnType("bigint");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("RecordStatus")
                        .HasColumnType("tinyint");

                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("CardId");

                    b.HasIndex("UserId");

                    b.ToTable("Cards", "card");
                });

            modelBuilder.Entity("Core.Domain.Entities.Client", b =>
                {
                    b.Property<Guid>("ClientId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("AccessTokenLifetimeInMins")
                        .HasColumnType("int");

                    b.Property<int>("AuthorizationCodeLifetimeInMins")
                        .HasColumnType("int");

                    b.Property<string>("ContactEmail")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<byte>("RecordStatus")
                        .HasColumnType("tinyint");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Secret")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ClientId");

                    b.ToTable("Clients", "card");
                });

            modelBuilder.Entity("Core.Domain.Entities.Language", b =>
                {
                    b.Property<byte>("LanguageId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Default")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("IsoCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("RecordStatus")
                        .HasColumnType("tinyint");

                    b.HasKey("LanguageId");

                    b.ToTable("Language");

                    b.HasData(
                        new
                        {
                            LanguageId = (byte)1,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "seed",
                            Default = true,
                            IsActive = false,
                            IsoCode = "en",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Name = "English",
                            RecordStatus = (byte)0
                        },
                        new
                        {
                            LanguageId = (byte)2,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = "seed",
                            Default = false,
                            IsActive = false,
                            IsoCode = "sw",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Name = "Swahili",
                            RecordStatus = (byte)0
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.Setting", b =>
                {
                    b.Property<int>("SettingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SettingId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte>("RecordStatus")
                        .HasColumnType("tinyint");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SettingId");

                    b.ToTable("Settings");

                    b.HasData(
                        new
                        {
                            SettingId = 1,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "InstanceName",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "Nito POS"
                        },
                        new
                        {
                            SettingId = 2,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "CurrencyCode",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "Ksh"
                        },
                        new
                        {
                            SettingId = 3,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "CurrencyConversionUnit",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "100"
                        },
                        new
                        {
                            SettingId = 4,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "MiniStatementSize",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "5"
                        },
                        new
                        {
                            SettingId = 5,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "MinimumMonthsInFullStatement",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "1"
                        },
                        new
                        {
                            SettingId = 6,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "MaximumMonthsInFullStatement",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "12"
                        },
                        new
                        {
                            SettingId = 7,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "Helpline",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "0720720720"
                        },
                        new
                        {
                            SettingId = 8,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "DateTimeFormat",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "d/M/yyyy h:mm:ss tt"
                        },
                        new
                        {
                            SettingId = 9,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "TimeZone",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "E. Africa Standard Time"
                        },
                        new
                        {
                            SettingId = 10,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "TokenLifetimeInMins",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "60"
                        },
                        new
                        {
                            SettingId = 11,
                            CreatedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            Key = "CodeLifetimeInMins",
                            ModifiedAt = new DateTime(2021, 4, 23, 18, 40, 0, 0, DateTimeKind.Unspecified),
                            RecordStatus = (byte)0,
                            Value = "10"
                        });
                });

            modelBuilder.Entity("Core.Domain.Entities.UserModule.Aggregates.User", b =>
                {
                    b.Property<long>("UserId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<byte>("RecordStatus")
                        .HasColumnType("tinyint");

                    b.Property<byte>("Role")
                        .HasColumnType("tinyint");

                    b.HasKey("UserId");

                    b.ToTable("Users", "card");
                });

            modelBuilder.Entity("Core.Domain.Entities.CardModule.Aggregates.Card", b =>
                {
                    b.HasOne("Core.Domain.Entities.UserModule.Aggregates.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("User");
                });
#pragma warning restore 612, 618
        }
    }
}
